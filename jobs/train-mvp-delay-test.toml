type = "directrequest"
schemaVersion = 1
name = "train-mvp-delay-test-new-status"
contractAddress = "0x4a82D5B73f22bF09AeCBA78c206ccb858E41f4b2"
maxTaskDuration = "0s"
observationSource = """

decode_log   [
type="ethabidecodelog" abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
data="$(jobRun.logData)"
topics="$(jobRun.logTopics)"
]

decode_cbor  [type="cborparse" data="$(decode_log.data)"]

fetch [
type="bridge"
name=delayoracletesting
requestData="{\\"journey\\": $(decode_cbor.journey)}"
]
    status       [type="jsonparse" path="status" data="$(fetch)"]
    delay        [type="jsonparse" path="delay" data="$(fetch)"]
    encode_data  [type="ethabiencode" abi="(bytes32 requestId, uint256 status, uint256 delay)" data="{ \\"requestId\\": $(decode_log.requestId), \\"status\\": $(status) , \\"delay\\": $(delay)}"]
    encode_tx    [type="ethabiencode"
                  abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
                  data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"
                 ]
    submit_tx    [type="ethtx" to="0x4a82D5B73f22bF09AeCBA78c206ccb858E41f4b2" data="$(encode_tx)"]

    decode_log -> decode_cbor -> fetch
    fetch -> status -> encode_data
    fetch -> delay -> encode_data
    encode_data -> encode_tx -> submit_tx
"""